<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="vertical" 
	xmlns:oh="com.roguedevelopment.objecthandles.*" 
	creationComplete="init()" 
	xmlns:popupbar="com.roguedevelopment.popupbar.*" 
	backgroundGradientColors="[#ffffff,#eeeeec]"
	xmlns:vdisplay="vis.vocabulary.display.*">
	
	<mx:Script>
		<![CDATA[
			import mx.core.Container;
			import flash.net.sendToURL;
			import mx.binding.utils.BindingUtils;
			import mx.utils.URLUtil;
			import vis.vocabulary.RDFProperty;
			import vis.vocabulary.display.RDFNode;
			import mx.controls.Alert;
			import vis.vocabulary.display.RDFObjectHandles;
			import com.roguedevelopment.objecthandles.ObjectHandles;
			import com.roguedevelopment.objecthandles.ObjectHandleEvent;
			import com.roguedevelopment.objecthandles.ObjectHandlesMouseCursors2;
			import com.roguedevelopment.objecthandles.SelectionManager;
			
			private var selectionManager:SelectionManager = SelectionManager.instance;
			
			private var host:String;
			private var _urlVocab:String;
			private var _urlLayout:String;
			private var _urlLayoutWrite:String;
			private var _urlDiagramWrite:String;
			
			// flashvars
			[Bindable]
			public var vocabulary:String;
			
			[Bindable]
			public var prefix:String;
			
			[Bindable]
			public var editMode:String;
			
			[Embed(source="assets/dialog-information.png")] 
            [Bindable]
            public var IconInfo:Class; 
			
			protected function init() : void
			{
				// setup the flashvars params
				if (Application.application.parameters.vocabulary != undefined)
					vocabulary = Application.application.parameters.vocabulary;
				else 
					vocabulary = '';
				
				if (Application.application.parameters.prefix != undefined)
					prefix = Application.application.parameters.prefix;
				else 
					prefix = '';
				
				if (Application.application.parameters.editMode != undefined)
					editMode = Application.application.parameters.editMode;
				else 
					editMode = '1';
				
				host = URLUtil.getServerNameWithPort(Application.application.url);
				if (host == '') {
					_urlVocab = 'vocabulary.xml';
					_urlLayout = 'layout.xml';
					_urlDiagramWrite = '';
					_urlLayoutWrite = '';
				} else {
					_urlVocab = URLUtil.getFullURL(host,prefix+vocabulary+'/xml');
					_urlLayout = URLUtil.getFullURL(host,prefix+vocabulary+'/layout');
					_urlDiagramWrite = URLUtil.getFullURL(host,prefix+vocabulary+'/write/image');
					_urlLayoutWrite = URLUtil.getFullURL(host,prefix+vocabulary+'/write/layout');
				}
				
				this.vocabularyPanel.loadVocabulary(_urlVocab,_urlLayout);
				this.vocabularyPanel.addEventListener(MouseEvent.CLICK,onMouseClickHandler);
				
				if (editMode=='1') {
					this.toolbar.visible = true;
					//this.vocabularyPanel.enabled = true;
				} else {
					this.toolbar.visible = false;
					//this.vocabularyPanel.enabled = false; 
				}
	 		}
			
			private function onMouseClickHandler(event:MouseEvent) : void
			{
				//this.selectionManager.selectNone();
			}
			
			private function onEditLayoutChangeHandler() : void
			{
				this.enableSection(this.editLayout.selected);
			}
			
			private function enableSection(enable:Boolean) : void
			{ 
				//Alert
				for each(var nodeHandler:RDFObjectHandles in selectionManager.getItems()) {
					nodeHandler.enableSelection = enable;
					nodeHandler.deselect();
				}
			}
			
			private function onZoom() : void
			{
				this.vocabularyPanel.scaleX = this.zoom.value;
				this.vocabularyPanel.scaleY = this.zoom.value;
			}
			
			private function changeGrid() : void
			{
				this.vocabularyPanel.gridSpacing = this.gridSize.value;
			}
			
			private function onSavelayout() : void
			{
				//var layout:XML = this.vocabularyPanel.vocabularyLayout;
				//Alert.show(layout.toXMLString());
				
				// 1 send the layout
				sendLayout();
				
				// 2 send the diagram
				//sendImage();
			}
			
			public function imgToByteArray( bmpImg : BitmapData ) : ByteArray
            {
                var binaryImage : ByteArray = new ByteArray();
                var bmpWidth:Number;
                var bmpHeight:Number;
                bmpWidth = bmpImg.width;
                bmpHeight = bmpImg.height;

                for( var i:uint=0; i< bmpWidth; i++ )
                {
                  for( var j:uint=0; j<bmpHeight; j++ )
                  {
                    binaryImage.writeUnsignedInt( bmpImg.getPixel( i, j ) );
                  }
                }
                return binaryImage;
            }
            
            public function sendLayout() : void
            {
            	var request:URLRequest = new URLRequest(_urlLayoutWrite);
	            request.method = URLRequestMethod.POST;
	            var variables:URLVariables = new URLVariables();
	            variables.layout = vocabularyPanel.vocabularyLayout;
	            request.data = variables;
	            //navigateToURL(request);
	            sendToURL(request);
            }
            
            public function sendImage() : void
            {
            	var request:URLRequest = new URLRequest(_urlDiagramWrite);
	            request.method = URLRequestMethod.POST;
	            var variables:URLVariables = new URLVariables();
	            variables.image = imgToByteArray(vocabularyPanel.vocabularyBitmap);
	            request.data = variables;
	            //navigateToURL(request);
	            sendToURL(request);
            }
            
            public function about() : void
            {
            	Alert.show('Thank you for using the Neologism Simple Vocbulary Visualizer. \n Cosmin Basca (c) March 2008, \n cosmin.basca@deri.org \n www.deri.ie','About NeoSViz',Alert.OK, this, null, IconInfo, Alert.OK);
            }
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%">
		<mx:HBox width="100%" borderStyle="solid" borderThickness="1" cornerRadius="3" id="toolbar">
			<mx:CheckBox label="Edit Layout" 
				id="editLayout" 
				change="onEditLayoutChangeHandler()" 
				selected="true"/>
			<mx:Label text="Zoom:" height="100%"/>
			<mx:HSlider height="100%" 
				minimum="1.0" 
				maximum="8.0" 
				enabled="true" 
				id="zoom" 
				allowTrackClick="false" 
				snapInterval="0.1" 
				change="onZoom()" 
				liveDragging="true"/>
			<mx:Label text="Grid Size" height="100%"/>
			<mx:HSlider height="100%" 
				minimum="5" 
				maximum="45" 
				value="{vocabularyPanel.gridSpacing}"
				snapInterval="2" 
				id="gridSize"
				liveDragging="true"
				change="changeGrid()"/>
			<mx:Button label="About" click="about()"/>
			<mx:Button label="Save Layout"
				click="onSavelayout()"
				visible="true"
				/>
		</mx:HBox>
	
		<vdisplay:VocabularyCanvas
				id="vocabularyPanel" 
				label="Vocabulary Preview" 
				width="100%" 
				height="100%"  
				cornerRadius="3"
				borderStyle="solid" 
				borderThickness="1">
		</vdisplay:VocabularyCanvas>
		
	</mx:VBox>
</mx:Application>
