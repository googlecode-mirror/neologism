# @TODO PATCH hack the rdf_schema to integrate our evoc module wrt to schema export
Index: rdf/contrib/rdf_schema/rdf_schema.module
===================================================================
--- rdf/contrib/rdf_schema/rdf_schema.module	(revision 231)
+++ rdf/contrib/rdf_schema/rdf_schema.module	(revision 232)
@@ -219,10 +221,10 @@
 function rdf_schema_rdf_resources($context) {
   switch ($context) {
     case NULL:
-      return array_merge(rdf_schema_get_resources(), rdf_schema_get_classes());
+      return array_merge(rdf_schema_get_resources(), rdf_schema_get_classes(), rdf_schema_get_properties());
     case RDF_SITE_URI:
       return rdf_schema_get_resources();
     case RDF_SCHEMA_URI:
-      return rdf_schema_get_classes();
+      return array_merge(rdf_schema_get_classes(), rdf_schema_get_properties());
   }
 }
Index: rdf/contrib/rdf_schema/rdf_schema.inc
===================================================================
--- rdf/contrib/rdf_schema/rdf_schema.inc	(revision 231)
+++ rdf/contrib/rdf_schema/rdf_schema.inc	(revision 232)
@@ -56,6 +56,32 @@
   return $resources;
 }
 
+/////////////////////////////////////////////////
+// Added by scor for the evoc module
+function rdf_schema_get_properties() {
+  // FIXME not all of this is necessary here since it is already in rdf_schema_get_classes().
+  $resources = array(RDF_SCHEMA_URI => new RDF_QueryCallback('rdf_schema_load_schema')); 
+
+  $url_options = array('absolute' => TRUE, 'alias' => TRUE);
+  foreach (module_invoke_all('rdf_properties') as $ns => $properties_info) {
+    // Property URIs
+    if ($ns == 'drupal') { // only exports the local properties
+      // Loop through each property of the local ns.
+      foreach ($properties_info as $property => $property_info) {
+  //var_dump($property_info);
+        $uri = rdf_schema_get_property_uri('', $property);
+        $resources[$uri] = new RDF_QueryCallback('rdf_schema_load_schema_property_evoc', array($property_info));
+      
+      }
+    }
+
+  }
+
+  return $resources;
+}
+/////////////////////////////////////////////////
+
+
 function rdf_schema_get_resources() {
   $resources = array(RDF_SITE_URI => new RDF_QueryCallback('rdf_schema_load_site'));
 
@@ -133,7 +159,26 @@
   );
 }
 
+
 //////////////////////////////////////////////////////////////////////////////
+// added by scor
+function rdf_schema_load_schema_property_evoc($property) {
+//var_dump($property);
+  return array(
+    rdf::type         => rdf_qname_to_uriref('rdf:Property'),
+    rdfs::isDefinedBy => rdf_uriref(RDF_SCHEMA_URI),
+    rdfs::domain      => rdf_uriref(rdf_schema_get_class_uri($property['domain'])),
+    // we don't use the rdf_schema_get_class_uri() here as we want to be able to specify classes from other ns.
+    rdfs::range       => !empty($property['range']) ? rdf_qname_to_uriref($property['range']) : rdf_qname_to_uriref('rdfs:Literal'), // TODO: should we map these to xsd:* types?
+    rdfs::label       => !empty($property['title']) ? rdf_literal($property['title'], 'en') : NULL,
+    rdfs::comment     => !empty($form_info['#description']) ? rdf_literal($form_info['#description'], 'en') : NULL,
+  );
+}
+//////////////////////////////////////////////////////////////////////////////
+
+
+
+//////////////////////////////////////////////////////////////////////////////
 // RDF Schema mappings
 
 function rdf_schema_load_site() {
