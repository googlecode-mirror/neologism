<?php

/**
 * Implementation of hook_menu().
 */
function local_sparql_menu() {
  $items = array();

  $items['local_sparql_sparql'] = array(
    'title' => 'SPARQL endpoint',
    'page callback' => 'local_sparql_sparql_endpoint',
    'access arguments' => array('access RDF data'),
  );

  $items['local_sparql_index_rdf'] = array(
    'title' => 'Build RDF index',
    'page callback' => 'local_sparql_index_rdf',
    'access arguments' => array('administer content types'),
  );
  return $items;
}


function local_sparql_index_rdf() {

  global $db_url;
  $url = parse_url($db_url);
$config = array(
  /* db */
  'db_name' => substr(urldecode($url['path']), 1),
  'db_user' => urldecode($url['user']),
  'db_pwd' => isset($url['pass']) ? urldecode($url['pass']) : '',
  /* store */
  'store_name' => 'arc1_rdfcck',
);

/* instantiation */
$store = ARC2::getStore($config);
if (!$store->isSetUp()) {
  $store->setUp();
}


//  $data = rdf_query(url($type . '/' . $id, array('absolute' => TRUE)), NULL, NULL, array('context' => array( 'id' =>$id)));

//  $output = rdf_serialize($data, array('format' => 'ntriples'));

//var_dump($node);
//var_dump(rdf_denormalize($node));

  // Emtpy the local store.
  $store->reset();

  // Fetch all the node id which are published.
  $entities = db_query(db_rewrite_sql("SELECT nid FROM {node} WHERE status = 1 limit 1000"));

  while ($entity = db_fetch_object($entities)) {
    // Build the document path.
    $doc = url('node/' . $entity->nid . '/rdf', array('absolute' => TRUE));
    
    // Parse the document and insert it in the store.
    $parser = ARC2::getRDFParser();
    $parser->parse($doc);
    $triples = $parser->getTriples();    
//var_dump($triples);
    $store->insert($triples, $doc);
  }

return t('The RDF index of the site has been rebuilt. Browse to the <a href="@endpoint">SPARQL endpoint</a> to query it.', array('@endpoint' => url('local_sparql_sparql')));
}



function local_sparql_sparql_endpoint() {

  global $db_url;
  $url = parse_url($db_url);

$config = array(
  /* db */
  'db_name' => substr(urldecode($url['path']), 1),
  'db_user' => urldecode($url['user']),
  'db_pwd' => isset($url['pass']) ? urldecode($url['pass']) : '',
  /* store */
  'store_name' => 'arc1_rdfcck',

  /* endpoint */
  'endpoint_features' => array(
    'select', 'construct', 'ask', 'describe', 
    'load', 'insert', 'delete', 
    'dump' /* dump is a special command for streaming SPOG export */
  ),
  'endpoint_timeout' => 60, /* not implemented in ARC2 preview */
  'endpoint_read_key' => '', /* optional */
  'endpoint_write_key' => 'somekey', /* optional */
  'endpoint_max_limit' => 500, /* optional */

);

/* instantiation */
$ep = ARC2::getStoreEndpoint($config);

if (!$ep->isSetUp()) {
  $ep->setUp(); /* create MySQL tables */
}

/* request handling */
$ep->go();


}
