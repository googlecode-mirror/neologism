<?php
// $Id: views_attach.module,v 1.1 2009/01/13 08:07:10 crell Exp $

/**
 *  Implementation of hook_views_api().
 */
function views_attach_views_api() {
  return array(
    'api' => 2.0,
  );
}

/**
 * Implementation of hook_content_extra_fields.
 */
function views_attach_content_extra_fields($type_name) {
  $extras = array();

  // Add each attached node_content view display to the appropriate node type.
  $views = views_get_applicable_views('uses hook nodeapi');
  foreach ($views as $data) {
    list($view, $display_id) = $data;
    if (in_array($type_name, $view->display_handler->options['types'])) {
      $title = $view->get_title();
      if (!$title) {
        $title = t('Unnamed attached view');
      }
      $extra[$view->name . '_' . $display_id] = array(
        'label' => $title,
        'description' => t('Attached view'),
        'weight' => 0,
      );
    }

    // Clean up, since view objects are expensive.
    $view->destroy();
  }

  return $extra;
}

/**
 * Implementation of hook_block
 */
function views_attach_user($op, &$edit, &$account, $category = NULL) {
  switch ($op) {
    case 'view':
      $items = array();
      $views = views_get_applicable_views('uses hook user');
      foreach ($views as $data) {
        list($view, $display_id) = $data;
        if ($category == $view->display_handler->get_option('category')) {
          $result = $view->execute_display($display_id);
          if (!empty($result)) {
            $account->content[$view->name . '_' . $display_id] = array(
              '#type' => 'user_profile_category',
              '#weight' => $view->display_handler->get_option('weight'),
              '#title' => $view->get_title(),
            );
            $account->content[$view->name . '_' . $display_id]['content'] = array(
              '#type' => 'markup',
              '#value' => $result,
            );
          }
        }
        $view->destroy();
      }
  }
}

/**
 * Implementation of hook_block
 */
function views_attach_nodeapi(&$node, $op, $teaser, $page) {
  switch ($op) {
    case 'view':
      $items = array();
      $views = views_get_applicable_views('uses hook nodeapi');
      foreach ($views as $data) {
        list($view, $display_id) = $data;
        $valid_node = in_array($node->type, $view->display_handler->get_option('types'));
        $valid_mode = ($teaser == $view->display_handler->get_option('teaser') || $full == $view->display_handler->get_option('full'));
        if ($valid_node && $valid_mode) {
          $result = $view->execute_display($display_id);
          if (!empty($result)) {
            $node->content[$view->name . '_' . $display_id] = array(
              '#title' => $view->get_title(),
              '#type' => 'markup',
              '#weight' => module_exists('cck') ? content_extra_field_weight($node->type, $view->name . '_' . $display_id) : 10,
              '#value' => $result,
            );
          }
        }
        $view->destroy();
      }
  }
}
