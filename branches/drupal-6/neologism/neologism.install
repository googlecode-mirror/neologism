<?php
// $Id:  $

function neologism_install() {
	_neologism_install_node_type('neo_vocabulary');
  _neologism_install_node_type('neo_class');
  _neologism_install_node_type('neo_property');
  content_clear_type_cache();
  
  module_load_include('module', 'profile');
  module_load_include('inc', 'profile', 'profile.admin');
  _neologism_install_profile_field('Full name', 'fullname', 'textfield', 0,
      'Your full name. Will be shown instead of the user name in vocabularies you are authoring.');
  _neologism_install_profile_field('Personal home page', 'homepage', 'textfield', 1,
      'Your personal home page. Must be a full URI (i.e., starting with <i>http://</i>).');
  _neologism_install_profile_field('Show email address', 'show_email', 'checkbox', 2,
      'Check this if you want your email address to be shown in vocabularies you are authoring.');
  _neologism_install_profile_field('Organisation name', 'affiliation', 'textfield', 3,
      'The organisation you\'re affiliated with. Will be shown next to your name on vocabularies that you are authoring.');
  _neologism_install_profile_field('Organisation homepage', 'affiliation_homepage', 'textfield', 4,
      'Your organisation\'s homepage. Must be a full URI (i.e., starting with <i>http://</i>).');

  drupal_set_message(t('Neologism successfully installed.'));
}

function neologism_uninstall() {
  $q = db_query("SELECT nid FROM {node} WHERE type='neo_vocabulary'");
  while ($row = db_fetch_object($q)) {
    $node = node_load($row->nid);
    node_delete($row->nid);
    // Clean up. This should be done automatically by node_delete, but it does not
    // happen here because the module is already disabled, so we call the hook manually
    module_invoke('neologism', 'nodeapi', $node, 'delete', null, null);
  }

  _neologism_uninstall_node_type('neo_property');
  _neologism_uninstall_node_type('neo_class');
  _neologism_uninstall_node_type('neo_vocabulary');
  content_clear_type_cache();
  
  module_load_include('module', 'profile');
  module_load_include('inc', 'profile', 'profile.admin');
  _neologism_uninstall_profile_field('fullname');
  _neologism_uninstall_profile_field('homepage');
  _neologism_uninstall_profile_field('show_email');
  _neologism_uninstall_profile_field('affiliation');
  _neologism_uninstall_profile_field('affiliation_homepage');

  drupal_set_message( t('Neologism successfully uninstalled.') );
}

/**
 * Update for Neologism 0.5.0
 * @return 
 */
function neologism_update_6201() {
  variable_set('ext_path', drupal_get_path('module', 'ext') .'/ext');
  return array();
}

/**
 * Definitions of the CCK content types for Neologism which get created via hook_enable()
 * when the module is enabled.
 */
function _neologism_install_node_type($type) {
  if(!module_exists("content_copy")){
    drupal_set_message('Programmatically creating CCK fields requires the Content Copy module. Exiting.');
    return;
  }
  
  // remove content type if it already exists
  $ct = content_types();
  if (isset($ct[$type])) {
    node_type_delete($type);      
  }
  
  $cck_definition_file = drupal_get_path('module', 'neologism')."/cck_definitions/$type.cck";
  if(!file_exists($cck_definition_file)) {
    drupal_set_message("Unable to read input file <i>$cck_definition_file</i> for import.", 'error');
    return;
  }

  $form = array();
  $form['values']['type_name'] = '<create>';
  $form['values']['macro'] = file_get_contents($cck_definition_file);
  drupal_execute("content_copy_import_form", $form);
}

function _neologism_uninstall_node_type($type) {
  node_type_delete($type);
  drupal_set_message(t('Node type %type deleted.', array('%type' => $type)));
}

function _neologism_install_profile_field($title, $name, $type, $weight, $explanation) {
  $form = array();
  $form['values']['title'] = $title;
  $form['values']['name'] = 'profile_neologism_' . $name;
  $form['values']['explanation'] = $explanation;
  $form['values']['category'] = 'Vocabulary author information';
  $form['values']['weight'] = $weight;
  $form['values']['register'] = 1;
  $form['values']['visibility'] = 2;
  $form['values']['page'] = '';
  drupal_execute('profile_field_form', $form, $type);
}

function _neologism_uninstall_profile_field($name) {
  $field = 'profile_neologism_' . $name;
  $fid = db_result(db_query("SELECT fid FROM {profile_fields} WHERE name='%s'", $field));
  if (!$fid) {
    drupal_set_message(t('Failed to delete profile field %field.', array('%field' => $field)), 'warning');
    return;
  }
  $form = array();
  $form['values']['confirm'] = 1;
  drupal_execute('profile_field_delete', $form, $fid);
}
